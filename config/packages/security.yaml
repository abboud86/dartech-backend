security:
  password_hashers:
    App\Entity\User:
      algorithm: auto

  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email

  firewalls:
    dev:
      pattern: ^/(?:_(?:profiler|wdt)|assets/(?:css|images|js))/
      security: false

    main:
      stateless: true
      provider: app_user_provider
      entry_point: App\Security\JsonUnauthorizedEntryPoint
      login_throttling:
        max_attempts: 5
        interval: '1 minute'
      custom_authenticators:
        - App\Security\TestTokenAuthenticator
        - App\Security\TokenAuthenticator

  access_control:
    # Préflight CORS toujours public
    - { path: ^/, roles: PUBLIC_ACCESS, methods: [OPTIONS] }

    # Auth endpoints publics
    - { path: ^/v1/auth/register$, roles: PUBLIC_ACCESS, methods: [POST] }
    - { path: ^/v1/auth/login$,    roles: PUBLIC_ACCESS, methods: [POST] }
    - { path: ^/v1/auth/logout$,   roles: PUBLIC_ACCESS, methods: [POST] }

    # Endpoints read-only publics
    - { path: ^/v1/artisans,                roles: PUBLIC_ACCESS, methods: [GET] }
    - { path: ^/v1/categories,              roles: PUBLIC_ACCESS, methods: [GET] }
    - { path: ^/v1/services,                roles: PUBLIC_ACCESS, methods: [GET] }
    - { path: ^/v1/autocomplete,            roles: PUBLIC_ACCESS, methods: [GET] }

    # Liveness/Readiness
    - { path: ^/healthz$, roles: PUBLIC_ACCESS }

    # Tout le reste de l'API v1 est protégé
    - { path: ^/v1, roles: IS_AUTHENTICATED_FULLY }
